library(Rd2roxygen)
Rd2roxygen()
Rd2roxygen(pkg = ".")
##------ Thu Oct  5 00:29:51 2017 ------##
?DensParcorr
library(DensParcorr)
?DensParcorr
?clime
library(gplots)
help(package = "gplots")
library(DensParcorr)
help(package = "clime")
help(package = "gplots")
data = matrix(rnorm(200),ncol=20)
t0 = proc.time()[3]
dens.est = DensParcorr(data,select=FALSE)
proc.time()[3]-t0
t0 = proc.time()[3]
dens.est = DensParcorr(data,select=FALSE, directory = tempdir())
proc.time()[3]-t0
t0 = proc.time()[3]
dens.est = DensParcorr(data,select=FALSE, directory = tempfile())
proc.time()[3]-t0
partial.dens.est = DensParcorr(data,dens.level  =.4,select=TRUE,
directory = tempfile())
##### Example 2: Estimate the network that reaches 40% density level.
partial.dens.est = DensParcorr(data,dens.level  =.4,select=TRUE,
directory = tempfile())
###### Example 3: Now, estimate the 60% density level network based
###### on the same data. To speed up computation, we read in the
###### previous output from Example 2 into Parcorr.est
t0 = proc.time()[3]
partial.dens.est2 = DensParcorr(data, Parcorr.est = partial.dens.est,
dens.level=.6,select=TRUE,
directory = tempfile())
proc.time()[3]-t0
library(DensParcorr)
usethis::use_travis()
usethis::use_travis
base_path = "."
use_template(
"travis.yml",
".travis.yml",
ignore = TRUE,
base_path = base_path
)
library(usethis)
use_template(
"travis.yml",
".travis.yml",
ignore = TRUE,
base_path = base_path
)
usethis:::use_template(
"travis.yml",
".travis.yml",
ignore = TRUE,
base_path = base_path
)
travis_badge(base_path = base_path)
usethis:::travis_badge(base_path = base_path)
usethis:::appveyor_badge(base_path = base_path)
use_appveyor
gh <- gh::gh_tree_remote(base_path)
code_block = usethis:::code_block
code_block(paste0(
"[![AppVeyor Build Status]",
"(https://ci.appveyor.com/api/projects/status/github/", gh$username, "/", gh$repo, "?branch=master&svg=true)]",
"(https://ci.appveyor.com/project/", gh$username, "/", gh$repo, ")"
))
use_coverage
usethis:::coveralls_badge(base_path = base_path)
